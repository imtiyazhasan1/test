version: 0.2
 
env:
  variables:
    TF_VERSION: "0.12.28"
  secrets-manager:
    TF_HarborCreds: "$Harbor_creds"
    ToolsClusterUsername: ToolsClusterCreds:username
    ToolsClusterPassword: ToolsClusterCreds:password
 
phases:
  install:
    commands:
      - cd /usr/bin
      - curl -s -qL -o terraform.zip https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
      - unzip -o terraform.zip
      - curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
      - chmod +x /usr/local/bin/argocd
  
  pre_build:
    commands:
      - |
        if [ "$TF_ACTION" = "destroy -auto-approve" ] ; 
        then
        aws eks update-kubeconfig --name $TF_VAR_cluster_name --region $TF_VAR_region
        argocd login --server https://argocd.eks-tools-prod-ntq4p.gks.vodafone.com --username $ToolsClusterUsername --password $ToolsClusterPassword --grpc-web argocd.eks-tools-prod-ntq4p.gks.vodafone.com --insecure
        argocd cluster rm  $TF_VAR_eks_endpoint || true 
        fi
      - echo "terraform $TF_VERSION $TF_ACTION on $TF_VAR_ENV completed on `date`"

  build:
    commands:
      - echo $TF_HarborCreds
      - echo $ToolsClusterUsername
      - echo $ToolsClusterPassword
      - echo "argocd cluster add arn:aws:eks:$TF_VAR_region:$TF_VAR_tenantAccountId:cluster/$TF_VAR_cluster_name --name $TF_VAR_cluster_name"
      - curl -kvvv https://registry.eu-central-1.harbor.vodafone.com/chartrepo/gks-public-cloud || true
      - cd "$CODEBUILD_SRC_DIR"
      - sed -i "s/cluster_name/$TF_VAR_cluster_name/g" _terraform.tf
      
      - sed -i "s/var_argo_url/argocd.$TF_VAR_cluster_name.gks.vodafone.com/g" charts/argocd/values.yaml
      - sed -i "s/var_client_id/$TF_VAR_clientId/g" charts/argocd/values.yaml
      - sed -i "s/var_org_name/$TF_VAR_githubOrganizationName/g" charts/argocd/values.yaml
      - sed -i "s/var_team_name/$TF_VAR_teamName/g" charts/argocd/values.yaml
      
      - sed -i "s/tag_project_name/$TF_VAR_Project/g" charts/ingress-nginx/values.yaml
      - sed -i "s/tag_managed_by/$TF_VAR_ManagedBy/g" charts/ingress-nginx/values.yaml
      - sed -i "s/tag_tagging_version/$TF_VAR_TaggingVersion/g" charts/ingress-nginx/values.yaml
      - sed -i "s/tag_confidentiality/$TF_VAR_Confidentiality/g" charts/ingress-nginx/values.yaml
      - sed -i "s/tag_environment/$TF_VAR_Environment/g" charts/ingress-nginx/values.yaml
      - sed -i "s/tag_security_zone/$TF_VAR_SecurityZone/g" charts/ingress-nginx/values.yaml
      
      - sed -i "s/tf_s3_bucket/$TF_VAR_TFStateBucket/g" ./_terraform.tf
      - sed -i "s/tf_dynamodb_table/$TF_VAR_TFStateDynamoDB/g" ./_terraform.tf
      - sed -i "s/tf_region/$TF_VAR_TFStateRegion/g" ./_terraform.tf
      - sed -i "s#tf_kms_key_arn#$TF_VAR_TFStateKMSKeyARN#g" ./_terraform.tf
      
      - printenv | grep $TF_VAR_trendMicroTenantId || true
      - sed -i "s/tenantNameValue/$TF_VAR_trendMicroTenantId/g" ./eks-userdata.tpl
      
      # - chmod +x scripts/adopt_existing_resource.sh || true
      # - ./scripts/adopt_existing_resource.sh  || true
      
      - chmod +x scripts/terraform_exec.sh
      - ./scripts/terraform_exec.sh
      
      - chmod +x scripts/aws_assume_role.sh || true
      - ./scripts/aws_assume_role.sh $TF_VAR_DEPLOY_ROLE gks-eks tenant || true
      
      - chmod +x scripts/post_cluster_deployment.sh
      - ./scripts/post_cluster_deployment.sh || true
      
      - kubectl describe cm aws-auth -n kube-system || true
      
  post_build:
    commands:
      - |
        if [ "$TF_ACTION" = "apply -auto-approve" ] ; 
        then
        argocd login --server https://argocd.eks-tools-prod-ntq4p.gks.vodafone.com --username $ToolsClusterUsername --password $ToolsClusterPassword --grpc-web argocd.eks-tools-prod-ntq4p.gks.vodafone.com --insecure
        argocd cluster add arn:aws:eks:$TF_VAR_region:$TF_VAR_tenantAccountId:cluster/$TF_VAR_cluster_name --name $TF_VAR_cluster_name
        terraform_output=$(terraform output -json)
        echo $terraform_output
        aws sns publish --topic-arn $TOPIC_ARN --message "$terraform_output"
        fi
      - echo "terraform $TF_VERSION $TF_ACTION on $TF_VAR_ENV completed on `date`"
